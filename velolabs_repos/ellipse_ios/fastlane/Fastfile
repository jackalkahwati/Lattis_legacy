fastlane_version "2.10.0"


default_platform :ios

platform :ios do

  build = get_info_plist_value(path: "./Ellipse/Info.plist", key: "CFBundleVersion")

  lane :fabric do |values|
    cert
    sigh(
      adhoc: true,
      force: true,
      app_identifier: values[:app_identifier]
    )

    gym(
      scheme: values[:scheme],
      export_method: 'ad-hoc'
    )

    emails = values[:test_email] ? values[:test_email] : ['ravil@lattis.io'] # You can list more emails here
    groups = values[:test_email] ? nil : ['lattis-internal'] # You can define groups on the web and reference them here
    changelog = changelog_from_git_commits

    crashlytics(api_token: '2a7c173f04d3a790e6717f79ae91223089986b40',
      build_secret: 'b5d39bb00fdb0bfc027b4671fadb82b50c33ac2083b3bf4f08d34585271a4b1f',
      emails: emails,
      groups: groups,
      notes: changelog,
      notifications: true
    )

    name = values[:scheme]
    slack(
      slack_url: "https://hooks.slack.com/services/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",
      message: "#{name} successfully uploaded to the Crashlitics",
      default_payloads: [:git_author],
      attachment_properties: {
        fields: [
          {
            title: "Version",
            value: "#{get_version_number} (#{build})"
          },
          {
            title: "Link",
            value: values[:link]
          },
          {
            title: "Changelog",
            value: changelog
          }
        ]
      }
    )

    upload_symbols_to_crashlytics(api_token: '2a7c173f04d3a790e6717f79ae91223089986b40')
    clean_build_artifacts
  end

  desc "Publish Dev build"
  lane :dev do |values|
    values[:app_identifier] = "io.lattis.Ellipse.Dev"
    values[:scheme] = "Ellipse Dev"
    values[:link] = "https://betas.to/CBRTbpde"
    fabric values
  end

  desc "Publish Beta build"
  lane :beta do |values|
    values[:app_identifier] = "io.lattis.Ellipse.Beta"
    values[:scheme] = "Ellipse Beta"
    values[:link] = "https://betas.to/qqaw5dvx"
    fabric values
  end

  lane :prod do
    cert
    sigh(
      force: true,
      app_identifier: "www.skylock.Ellipse"
    )
    gym(
      scheme: "Ellipse",
      configuration: "Release",
      export_method: 'app-store'
    )
    pilot(skip_submission: true, skip_waiting_for_build_processing: true)
    slack(
      slack_url: "https://hooks.slack.com/services/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",
      message: "Ellipse successfully uploaded to the TestFlight",
      default_payloads: [:git_author],
      attachment_properties: {
        fields: [
          {
            title: "Version",
            value: "#{get_version_number} (#{build})"
          }
        ]
      }
    )
    upload_symbols_to_crashlytics(api_token: '2a7c173f04d3a790e6717f79ae91223089986b40')
    clean_build_artifacts
  end

  desc "Publish Dev, Beta and TestFlight (if prod is true)"
  lane :deploy do |values|
    dev
    beta
    if values[:prod] === true
      prod
    end
  end

  desc "Create and push a new tag according to version number"
  lane :release do
    add_git_tag(
      tag: "v#{get_version_number}"
    )
    push_git_tags
  end
end
